@{
    Layout = "~/Views/Layout/PageLayout.cshtml";
    ViewBag.Title = "管理后台菜单";
}



<script>
    //迭代获得该节点下的所有节点
    function GetSonMenuByRoot(allElement, root) {
        $.each(root, function (key, val) {
            if (val.IsLeaf == false) {
                val.children = _.sortBy(_.filter(allElement, function (data) { return data.ParentObjectId == val.ObjectId }), "Sort");

                GetSonMenuByRoot(allElement, val.children);
            }
        });
        return root;
    }
    $(function () {

        var listAllMenu = JSON.parse($("#listAllMenu").val());
        var GridRowsData = _.filter(listAllMenu, function (data) { return data.Level == 1; });
        GridRowsData = GetSonMenuByRoot(listAllMenu, GridRowsData);
        var GridRows = new Object();
        GridRows.Rows = GridRowsData;
        //console.dir(GridRows);

        $("#mainpanel").ligerLayout({ centerWidth: "100%" });

        manager = $("#MenuGrid").ligerGrid({
            columns: [
                      {
                          display: '操作', isSort: false, width: 120, render: function (rowdata, rowindex, value) {
                              var h = "";

                              h += "<a href='javascript:editMenu(" + rowindex + ")'>修改</a> ";
                              h += "<a href='javascript:deleteMenu(" + rowindex + ")'>删除</a> ";

                              return h;
                          }
                      },
                { display: '菜单名称', name: 'DisplayName', width: 250, align: 'left', editor: { type: 'text' } },

                {
                    display: 'Url', name: 'Href', width: 250, type: 'int', align: 'left', editor: { type: 'text' }
                },

                { display: '等级', name: 'Level', width: 250, align: 'left', editor: { type: 'text' } },
                { display: '排序', name: 'Sort', width: 50, align: 'left', editor: { type: 'text' } },
                { display: 'Icon链接', name: 'IconImg', width: 100, align: 'left', editor: { type: 'text' } }

            ],
            width: '100%',
            pageSizeOptions: [5, 10, 15, 20],
            height: '100%',
            data: GridRows,
            alternatingRow: false,
            tree: { columnName: 'DisplayName' },
            checkbox: false,
            autoCheckChildren: false,
            enabledEdit: true,
            rownumbers: true
        });

        //创建菜单点击事件
        $(document).on("click", "#addmenu", function () {
            $.DialogOpen("AddAdminMenuDialog", "创建菜单", "/Admin/AddAdminMenuPage", "", $(window).width() - 300, $(window).height() - 100);
            //console.dir($.ligerui.get("AddAdminMenuDialog"));
            //$.ligerui.get("AddAdminMenuDialog").close();
        });

    });
    //修改表格数据
    function editMenu(row) {
        var RowItem = manager.getRow(row);
        console.dir(RowItem);
        var AdminMenuModel = new Object();
        AdminMenuModel.ObjectId = RowItem.ObjectId;
        AdminMenuModel.ParentObjectId = RowItem.ParentObjectId;
        AdminMenuModel.DisplayName = RowItem.DisplayName;
        AdminMenuModel.IsLeaf = RowItem.IsLeaf;
        AdminMenuModel.IsRoot = RowItem.IsRoot;
        AdminMenuModel.Href = RowItem.Href;
        AdminMenuModel.Sort = RowItem.Sort;
        AdminMenuModel.Level = RowItem.Level;
        AdminMenuModel.IconImg = RowItem.IconImg;
        console.dir(AdminMenuModel);
        $.AJAXGetData("POST", "/Admin/EditAdminMenu", AdminMenuModel, function (data) {
            //console.dir(data);
            if (data.States) {
                alert(data.Message);
                //manager.loadData();
                window.location.reload();
            } else {
                alert(data.ErrorMessage);
            }
        });
    }

    //删除菜单数据 
    function deleteMenu(row) {
        var RowItem = manager.getRow(row);
        //console.dir(RowItem);
        var AdminMenuModel = new Object();
        AdminMenuModel.ObjectId = RowItem.ObjectId;
        AdminMenuModel.ParentObjectId = RowItem.ParentObjectId;
        AdminMenuModel.DisplayName = RowItem.DisplayName;
        AdminMenuModel.IsLeaf = RowItem.IsLeaf;
        AdminMenuModel.IsRoot = RowItem.IsRoot;
        AdminMenuModel.Href = RowItem.Href;
        AdminMenuModel.Sort = RowItem.Sort;
        AdminMenuModel.Level = RowItem.Level;
        AdminMenuModel.IconImg = RowItem.IconImg;
        //console.dir(AdminMenuModel);
        $.AJAXGetData("POST", "/Admin/DeleteAdminMenu", AdminMenuModel, function (data) {
            //console.dir(data);
            if (data.States) {
                alert(data.Message);
                //manager.loadData();
                window.location.reload();
            } else {
                alert(data.ErrorMessage);
            }
        });
    }

    //获得选中行的值
    function getSelected() {
        var row = manager.getSelectedRow();
        if (!row) { alert('请选择行'); return; }
        alert(JSON.stringify(row));
    }    function addMenu(rowid) {
        manager.beginEdit(rowid);
    }
    function cancelEdit(rowid) {
        manager.cancelEdit(rowid);
    }
    function endEdit(rowid) {
        manager.endEdit(rowid);
    }

    function deleteRow(rowid) {
        if (confirm('确定删除?')) {
            manager.deleteRow(rowid);
        }
    }    //parent:是否增加到当前节点下面
    function addRow(withchildren) {
        var selectRow = manager.getSelectedRow();
        var parentRow = selectRow;

        if (manager.isLeaf(parentRow)) {
            upgrade();
        }
        var data = getNewData(withchildren);
        manager.add(data, null, true, parentRow);
    }    function getNewData(withchildren) {
        var data = {
            displayname: "菜单名称",
            href: "菜单链接",
            level: "菜单级别",
            sort: "排序"
        };
        return data;
    }    function appendToCurrentNodeDown() {
        var selectRow = manager.getSelectedRow();
        if (!selectRow) return;
        var selectRowParnet = manager.getParent(selectRow);
        var data = getNewData();
        manager.add(data, selectRow, false, selectRowParnet);
    }    //升级    function upgrade() {
        var row = manager.getSelected();
        manager.upgrade(row);
    }
</script>
<style>
    body {
        font-size: 13px;
    }

    .description {
        padding-bottom: 30px;
        font-family: Verdana;
    }

        .description h3 {
            color: #CC0000;
            font-size: 16px;
            margin: 0 30px 10px 0px;
            padding: 45px 0 8px;
            border-bottom: solid 1px #888;
        }

    #layout {
        width: 100%;
        margin: 0;
        padding: 0;
    }

    td {
        padding: 5px;
    }

    /*new*/
    .ne-view .toolpanel, .topbar {
        padding: 8px;
        position: relative;
        border-bottom: 1px solid #CACACA;
        background: #F1F1F1 none;
        background: none, -webkit-gradient(linear, left top, left bottom, from(#f8f8f8), to(#E5E5E5));
        background: none, -webkit-linear-gradient(#f8f8f8, #E5E5E5);
        background: none, -moz-linear-gradient(#efefef, #E5E5E5);
        background: none, -o-linear-gradient(top, #f8f8f8, #E5E5E5);
        background: none, -khtml-gradient(linear, left top, left bottom, from(#f8f8f8), to(#E5E5E5));
        background: -ms-linear-gradient(top, #f8f8f8, #E5E5E5);
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#f8f8f8', endColorstr='#E5E5E5',GradientType=0 );
    }

    .clear {
        clear: both;
    }

    .left {
        float: left;
    }

    .toolbar {
        margin-top: 6px;
        margin-bottom: 3px;
        padding-left: 10px;
    }

    .ne-btn-blue:active, .ne-btn-add:active {
        background: -moz-linear-gradient(top, #2b6699, #4999bb);
        background: -webkit-gradient(linear, 0 0, 0 100%, from(#2b6699), to(#4999bb));
        background: -o-linear-gradient(top, #2b6699, #4999bb);
        background: -ms-linear-gradient(top, #2b6699 0%,#4999bb 100%);
        background: linear-gradient(top, #2b6699, #4999bb);
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#2b6699', endColorstr='#4999bb');
    }

    .ne-btn-blue:hover, .ne-btn-add:hover {
        background: #3286b4;
        color: #fff;
    }

    .ne-btn:active {
        background: #fbfbfb;
        background: -moz-linear-gradient(top, #e8e8e8, #fbfbfb);
        background: -webkit-gradient(linear, 0 0, 0 100%, from(#e8e8e8), to(#fbfbfb));
        background: -o-linear-gradient(top, #e8e8e8, #fbfbfb);
        background: -ms-linear-gradient(top, #e8e8e8 0%,#fbfbfb 100%);
        background: linear-gradient(top, #e8e8e8, #fbfbfb);
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#e8e8e8', endColorstr='#fbfbfb');
    }

    .ne-btn:hover {
        filter: progid:DXImageTransform.Microsoft.Gradient(enabled=false);
        background: #f4f5f6;
        color: #555;
        text-decoration: underline;
    }

    .ne-btn {
        display: inline-block;
        margin: 0;
        margin-right: 6px;
        padding: 0 8px;
        height: 24px;
        line-height: 24px;
        font-size: 12px;
        border: 1px solid #c1c1c1;
        border-radius: 2px;
        box-shadow: 0 1px 1px rgba(0,0,0,0.15);
        background: #fff;
        background: -moz-linear-gradient(top, #fff, #f4f5f6);
        background: -webkit-gradient(linear, 0 0, 0 100%, from(#fff), to(#f4f5f6));
        background: -o-linear-gradient(top, #fff, #f4f5f6);
        background: -ms-linear-gradient(top, #fff 0%,#f4f5f6 100%);
        background: linear-gradient(top, #fff, #f4f5f6);
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#f4f5f6');
        color: #555;
        vertical-align: middle;
        cursor: pointer;
        text-decoration: none;
    }

    .ne-btn-blue, .ne-btn-add {
        border: 1px solid #3279a0;
        box-shadow: 0 1px 1px rgba(0,0,0,0.3);
        background: #3377aa;
        background: -moz-linear-gradient(top, #4999bb, #3377aa);
        background: -webkit-gradient(linear, 0 0, 0 100%, from(#4999bb), to(#3377aa));
        background: -o-linear-gradient(top, #4999bb, #3377aa);
        background: -ms-linear-gradient(top, #4999bb 0%,#3377aa 100%);
        background: linear-gradient(top, #4999bb, #3377aa);
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#4999bb', endColorstr='#3377aa');
        font-weight: bold;
        color: #fff;
        text-shadow: 0 2px 2px rgba(0,0,0,0.22);
    }
    /*new*/

    .center {
        text-align: center;
        vertical-align: central;
    }
</style>

<input type="hidden" id="listAllMenu" name="name" value="@ViewData["listAllMenu"].ToString()" />
<div class="ne-view" style="overflow: hidden">
    <div class="toolpanel">
        <div class="toolpanelinner">
            @*  <div class="toolpaneltop"></div>
                <div class="clear"></div>*@
            <div class="toolbar row">
                <div class="col-xs-2 center">
                    <a class="ne-btn ne-btn-blue" id="addmenu">创建</a>
                </div>
                <div class="col-xs-4 center">
                    <a class="ne-btn ne-btn-blue" onclick="getSelected()">获取选中的值(选择行)</a>
                </div>

            </div>
            @*<div class="toolbar row">
                    <a class="ne-btn ne-btn-blue" data-id="add">创建</a>
                    <a class="ne-btn ne-btn-blue" onclick="getSelected()">获取选中的值(选择行)</a>
                </div>*@
        </div>

    </div>
    <div id="mainpanel">
        <div position="center">
            <div id="MenuGrid">
            </div>
        </div>
    </div>
</div>



